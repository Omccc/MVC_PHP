<h1 class="mb-3 text-center">LOGIN</h1>

<br>

<?php

if (isset($error)) {


  echo $error;

}



?>


<br><br>

<form method="POST">


<div class="mb-3">
    <label for="exampleInputEmail1" class="form-label">Email</label>
    <input type="email" class="form-control" name="mail" id="exampleInputEmail1" aria-describedby="emailHelp">
  </div>

  <div class="mb-3">
    <label for="exampleInputEmail1" class="form-label">Mot de passe</label>
    <input type="password" class="form-control" name="password" id="exampleInputEmail1" aria-describedby="emailHelp">
  </div>


  </div>
  <button type="submit" class="btn btn-primary" id="login" name="submit">Se connecter</button>
</form>



<script>

const connectionConfirmation = document.getElementById("login");

connectionConfirmation.addEventListener("click", () => alert("Bienvenu, vous êtes dorénavant connecté !"));


        </script>

































<!-- 

Explications de ce code 

Ce code HTML crée un formulaire de connexion (login) pour un site web. Voici une explication de chaque partie du code :

1. **`<h1 class="mb-3 text-center">LOGIN</h1>`** :
   - Cette ligne affiche un titre "LOGIN" centré horizontalement dans la page. La classe "mb-3" ajoute une marge inférieure.

2. **`<br>`** :
   - Cette balise `<br>` insère un saut de ligne (ligne vide) pour ajouter de l'espace entre le titre et le formulaire.

3. **`< ?php if (isset($error)) { echo $error; } ?>`** :
   - Ce code PHP vérifie si la variable `$error` est définie. Si c'est le cas, il affiche le contenu de la variable `$error`. Cela signifie qu'en cas d'erreur lors de la tentative de connexion, un message d'erreur sera affiché.

4. **`<br><br>`** :
   - Ces balises `<br>` insèrent deux sauts de ligne, ce qui ajoute de l'espace supplémentaire entre le message d'erreur (s'il y en a un) et le formulaire.

5. **`<form method="POST">`** :
   - C'est le début du formulaire. La méthode "POST" indique que les données du formulaire seront envoyées au serveur de manière non sécurisée (à des fins de démonstration). Le formulaire est encapsulé dans une balise `<form>`.

6. **`<div class="mb-3"> ... </div>`** (pour chaque champ du formulaire) :
   - Chaque champ de formulaire est contenu dans une balise `<div>` avec la classe "mb-3", ajoutant une marge inférieure à chaque champ.

7. **`<label for="exampleInputEmail1" class="form-label">Email</label>`** :
   - Cette ligne affiche une étiquette (label) pour le champ de formulaire "Email". L'attribut "for" est associé à l'ID du champ d'entrée correspondant.

8. **`<input type="email" class="form-control" name="mail" id="exampleInputEmail1" aria-describedby="emailHelp">`** :
   - Cette ligne crée un champ de texte où l'utilisateur peut saisir son adresse e-mail. Le champ a un type "email" qui peut effectuer une validation de format. La classe "form-control" donne un aspect stylisé au champ. L'attribut "name" est utilisé pour identifier ce champ lors de l'envoi du formulaire.

9. **`<label for="exampleInputEmail1" class="form-label">Mot de passe</label>`** :
   - Cette ligne affiche une étiquette (label) pour le champ de formulaire "Mot de passe".

10. **`<input type="password" class="form-control" name="password" id="exampleInputEmail1" aria-describedby="emailHelp">`** :
    - Cette ligne crée un champ de texte où l'utilisateur peut saisir son mot de passe. Le champ a un type "password", ce qui masque les caractères saisis. La classe "form-control" donne un aspect stylisé au champ. L'attribut "name" est utilisé pour identifier ce champ lors de l'envoi du formulaire.

11. **`<button type="submit" class="btn btn-primary" name="submit">Se connecter</button>`** :
    - Cette ligne crée un bouton de soumission du formulaire. L'attribut "type" est "submit", ce qui signifie que lorsque l'utilisateur clique sur ce bouton, le formulaire sera soumis au serveur. La classe "btn btn-primary" donne un aspect stylisé au bouton. L'attribut "name" est "submit", ce qui permet d'identifier ce bouton lors de la soumission du formulaire.

En résumé, ce code HTML génère un formulaire de connexion avec des champs pour l'adresse e-mail et le mot de passe. Si une erreur survient lors de la tentative de connexion, un message d'erreur est affiché. Lorsque l'utilisateur soumet ce formulaire, les données seront envoyées au serveur pour traitement ultérieur. -->